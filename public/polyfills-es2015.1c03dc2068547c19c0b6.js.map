{"version":3,"sources":["webpack:///node_modules/zone.js/dist/task-tracking.js","webpack:///src/polyfills.ts","webpack:///node_modules/zone.js/dist/zone-evergreen.js"],"names":["TaskTrackingZoneSpec","this","name","microTasks","macroTasks","eventTasks","properties","get","Zone","current","prototype","getTasksFor","type","Error","onScheduleTask","parentZoneDelegate","currentZone","targetZone","task","source","push","scheduleTask","onCancelTask","tasks","i","length","splice","cancelTask","onInvokeTask","applyThis","applyArgs","invokeTask","clearEvents","window","__Zone_disable_requestAnimationFrame","__Zone_disable_on_property","__zone_symbol__BLACK_LISTED_EVENTS","__Zone_enable_cross_context_check","global","performance","mark","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","parent","zoneSpec","_parent","_name","_properties","_zoneDelegate","ZoneDelegate","patches","zone","_currentZoneFrame","_currentTask","fn","hasOwnProperty","perfName","_api","key","getZoneWith","fork","callback","_callback","intercept","runGuarded","arguments","invoke","error","handleError","NO_ZONE","state","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","customSchedule","ZoneTask","microTask","customCancel","canceling","count","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","apply","returnTask","scheduleFn","scheduleMicroTask","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","toString","Object","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","setNativePromise","NativePromise","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","__load_patch","api","getOwnPropertyDescriptor","defineProperty","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","e","rejection","console","message","stack","uncaughtPromiseError","shift","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","TypeError","clearRejectedNoCatch","trace","currentTask","configurable","enumerable","writable","scheduleResolveOrReject","obj","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","Symbol","toStringTag","species","C","onFinally","race","all","ZONE_AWARE_PROMISE","desc","set","NewNativePromise","symbolThenPatched","Ctor","proto","prop","originalThen","fetch","resultPromise","ctor","Promise","ObjectGetPrototypeOf","getPrototypeOf","create","Array","slice","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","a","instance","patchFn","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","indexOf","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","buildEventListenerOptions","passive","capture","assign","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","blackListedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","Event","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","TRUE_STR","FALSE_STR","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","bind","id","eventTargetPatch","EVENT_TARGET","legacyPatch","blockingMethods","s","customElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","geolocation","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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AMpT,IAEnDoD,EAAIJ,sBAAsB9F,EAAO+V,GAASE,GAU9C,MAwGMI,EAAmB,CACrB,4BACA,aACA,aACA,eACA,sBACA,cACA,eACA,cACA,eACA,oBACA,4BACA,kBACA,aACA,iBACA,UACA,iBACA,UACA,SACA,QACA,WACA,WACA,WACA,mBACA,UACA,qBACA,SACA,gBACA,qBACA,wBACA,0BAOEC,EAAyB,CAAC,YAAa,gBAAiB,YAAa,oBAAqB,mBA6D1FC,EAAkB,CAAC,QACnBC,EAAqB,CAAC,OAAQ,QAAS,QAAS,OAAQ,SAAU,SAAU,gBAC5EC,EAAoB,CAAC,SAAU,SAAU,SACzCC,EAA2B,CAC7B,YAAa,WAAY,QAAS,QAAS,OAAQ,WAAY,UAAW,UAC1E,oBAEEC,EAAqB,CAAC,gBAAiB,WAAY,QAAS,UAAW,QAAS,UAAW,gBAAiB,SAC5GC,EAAsB,CAAC,QAAS,QAAS,OAAQ,WACjDC,EAAmB,CAAC,QAAS,WAC7BC,GApNgC,CAClC,QACA,kBACA,eACA,qBACA,WACA,cACA,OACA,SACA,UACA,iBACA,SACA,mBACA,oBACA,iBACA,YACA,QACA,QACA,cACA,aACA,WACA,OACA,UACA,YACA,WACA,YACA,WACA,OACA,iBACA,UACA,QACA,QACA,QACA,UACA,WACA,oBACA,QACA,UACA,UACA,WACA,QACA,OACA,YACA,aACA,iBACA,qBACA,YACA,aACA,aACA,YACA,WACA,YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6ClB,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB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","file":"x","sourcesContent":["/**\n* @license Angular v9.1.0-next.4+61.sha-e552591.with-local-changes\n* (c) 2010-2020 Google LLC. https://angular.io/\n* License: MIT\n*/\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n        factory();\n}((function () {\n    'use strict';\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A `TaskTrackingZoneSpec` allows one to track all outstanding Tasks.\n     *\n     * This is useful in tests. For example to see which tasks are preventing a test from completing\n     * or an automated way of releasing all of the event listeners at the end of the test.\n     */\n    var TaskTrackingZoneSpec = /** @class */ (function () {\n        function TaskTrackingZoneSpec() {\n            this.name = 'TaskTrackingZone';\n            this.microTasks = [];\n            this.macroTasks = [];\n            this.eventTasks = [];\n            this.properties = { 'TaskTrackingZone': this };\n        }\n        TaskTrackingZoneSpec.get = function () { return Zone.current.get('TaskTrackingZone'); };\n        TaskTrackingZoneSpec.prototype.getTasksFor = function (type) {\n            switch (type) {\n                case 'microTask':\n                    return this.microTasks;\n                case 'macroTask':\n                    return this.macroTasks;\n                case 'eventTask':\n                    return this.eventTasks;\n            }\n            throw new Error('Unknown task format: ' + type);\n        };\n        TaskTrackingZoneSpec.prototype.onScheduleTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n            task['creationLocation'] = new Error(\"Task '\" + task.type + \"' from '\" + task.source + \"'.\");\n            var tasks = this.getTasksFor(task.type);\n            tasks.push(task);\n            return parentZoneDelegate.scheduleTask(targetZone, task);\n        };\n        TaskTrackingZoneSpec.prototype.onCancelTask = function (parentZoneDelegate, currentZone, targetZone, task) {\n            var tasks = this.getTasksFor(task.type);\n            for (var i = 0; i < tasks.length; i++) {\n                if (tasks[i] == task) {\n                    tasks.splice(i, 1);\n                    break;\n                }\n            }\n            return parentZoneDelegate.cancelTask(targetZone, task);\n        };\n        TaskTrackingZoneSpec.prototype.onInvokeTask = function (parentZoneDelegate, currentZone, targetZone, task, applyThis, applyArgs) {\n            if (task.type === 'eventTask')\n                return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n            var tasks = this.getTasksFor(task.type);\n            for (var i = 0; i < tasks.length; i++) {\n                if (tasks[i] == task) {\n                    tasks.splice(i, 1);\n                    break;\n                }\n            }\n            return parentZoneDelegate.invokeTask(targetZone, task, applyThis, applyArgs);\n        };\n        TaskTrackingZoneSpec.prototype.clearEvents = function () {\n            while (this.eventTasks.length) {\n                Zone.current.cancelTask(this.eventTasks[0]);\n            }\n        };\n        return TaskTrackingZoneSpec;\n    }());\n    // Export the class so that new instances can be created with proper\n    // constructor params.\n    Zone['TaskTrackingZoneSpec'] = TaskTrackingZoneSpec;\n})));\n","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n* BROWSER POLYFILLS\n*/\n\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect';\n\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect';\n\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n */\n\n(window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n(window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n(window as any).__zone_symbol__BLACK_LISTED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n\n /*\n * in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n * with the following flag, it will bypass `zone.js` patch for IE/Edge\n */\n(window as any).__Zone_enable_cross_context_check = true;\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/***************************************************************************************************\n* SCULLY IMPORTS\n*/\n// tslint:disable-next-line: align\nimport 'zone.js/dist/task-tracking';\n","/**\n* @license Angular v9.1.0-next.4+61.sha-e552591.with-local-changes\n* (c) 2010-2020 Google LLC. https://angular.io/\n* License: MIT\n*/\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}((function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] === true;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        if (!isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // and the rejected value is an Error object,\n                            // use the value instead of wrapping it.\n                            try {\n                                // Here we throws a new Error to print more readable error log\n                                // and if the value is not an error, zone.js builds an `Error`\n                                // Object here to attach the stack information.\n                                throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                    (value && value.stack ? '\\n' + value.stack : ''));\n                            }\n                            catch (err) {\n                                uncaughtPromiseError = err;\n                            }\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        class ZoneAwarePromise {\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            get [Symbol.species]() { return ZoneAwarePromise; }\n            then(onFulfilled, onRejected) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                let C = this.constructor[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function prepareEventNames(eventName, eventNameToString) {\n        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames$1[eventName] = {};\n        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n    }\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            /**\n             * This util function will build an option object with passive option\n             * to handle all possible input from the user.\n             */\n            function buildEventListenerOptions(options, passive) {\n                if (!passiveSupported && typeof options === 'object' && options) {\n                    // doesn't support passive but user want to pass an object as options.\n                    // this will not work on some old browser, so we just pass a boolean\n                    // as useCapture parameter\n                    return !!options.capture;\n                }\n                if (!passiveSupported || !passive) {\n                    return options;\n                }\n                if (typeof options === 'boolean') {\n                    return { capture: options, passive: true };\n                }\n                if (!options) {\n                    return { passive: true };\n                }\n                if (typeof options === 'object' && options.passive !== false) {\n                    return Object.assign(Object.assign({}, options), { passive: true });\n                }\n                return options;\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                    const options = buildEventListenerOptions(arguments[2], passive);\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                if (passive) {\n                                    return nativeListener.call(target, eventName, delegate, options);\n                                }\n                                else {\n                                    return nativeListener.apply(this, arguments);\n                                }\n                            }\n                        }\n                    }\n                    const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                    const once = options && typeof options === 'object' ? options.once : false;\n                    const zone = Zone.current;\n                    let symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (!symbolEventNames) {\n                        prepareEventNames(eventName, eventNameToString);\n                        symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    }\n                    const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        if (!eventName) {\n            const foundTasks = [];\n            for (let prop in target) {\n                const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                let evtName = match && match[1];\n                if (evtName && (!eventName || evtName === eventName)) {\n                    const tasks = target[prop];\n                    if (tasks) {\n                        for (let i = 0; i < tasks.length; i++) {\n                            foundTasks.push(tasks[i]);\n                        }\n                    }\n                }\n            }\n            return foundTasks;\n        }\n        let symbolEventName = zoneSymbolEventNames$1[eventName];\n        if (!symbolEventName) {\n            prepareEventNames(eventName);\n            symbolEventName = zoneSymbolEventNames$1[eventName];\n        }\n        const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n        const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n        if (!captureFalseTasks) {\n            return captureTrueTasks ? captureTrueTasks.slice() : [];\n        }\n        else {\n            return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n                captureFalseTasks.slice();\n        }\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplayconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n})));\n"]}